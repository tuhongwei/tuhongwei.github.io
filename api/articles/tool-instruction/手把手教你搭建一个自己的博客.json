{"title":"手把手教你搭建一个自己的的博客","slug":"tool-instruction/手把手教你搭建一个自己的博客","date":"2021-01-12T08:33:29.000Z","updated":"2022-04-05T16:05:50.528Z","comments":true,"path":"api/articles/tool-instruction/手把手教你搭建一个自己的博客.json","excerpt":null,"covers":["/images/blog/hexo/screenshot1.jpg","/images/blog/hexo/screenshot2.jpg","/images/blog/hexo/screenshot3.jpg","/images/blog/hexo/screenshot4.jpg","/images/blog/hexo/screenshot5.jpg","/images/blog/hexo/screenshot6.jpg","/images/blog/hexo/miniprogram.jpg"],"content":"<h3 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h3><p>本文也适合有搭建博客需求的非技术人员，不需要服务器，不需要域名，手把手教你搭建一个自己的博客。</p>\n<h3 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h3><p>首先安装一个 Node.js 和 git，安装方式同普通软件安装一样，这里就不详述了。然后打开你的终端，输入命令npm install -g hexo-cli 安装hexo，继续输入 hexo init myBlog，初始化一个你的博客项目。至此，你的博客所在文件夹里面就有了如下目录<img src=\"/images/blog/hexo/screenshot1.jpg\"></p>\n<p>然后用 npm run server启动你的本地服务器，然后在你浏览器里面打开<a href=\"http://localhost:4000，不出意外的话就能看到了你的博客的界面了。\">http://localhost:4000，不出意外的话就能看到了你的博客的界面了。</a></p>\n<h3 id=\"润色\"><a href=\"#润色\" class=\"headerlink\" title=\"润色\"></a>润色</h3><p>现在你的博客里面使用的是hexo内置的默认主题，觉得有点丑是吧，那我们换个主题，这里我推荐自己感觉比较好的两个主题：<a href=\"https://github.com/blinkfox/hexo-theme-matery\">https://github.com/blinkfox/hexo-theme-matery</a> 和 <a href=\"https://github.com/niemingzhao/niemingzhao.github.io%E3%80%82\">https://github.com/niemingzhao/niemingzhao.github.io。</a> 好了，我们现在把它安装到我们的本地，执行 git clone <code> https://github.com/blinkfox/hexo-theme-matery.git</code>   themes/matery , 然后去matery文件夹下删掉.git文件夹。</p>\n<p>我们去我们的github里面创建一个仓库，名字叫做 <strong>你的github用户名.github.io</strong>  ，比如我的用户名是tuhongwei，那么创建的仓库名就是tuhongwei.github.io，至于为什么这样命名，是因为github提供了一个这种形式的域名，可以直接访问到我们仓库里的静态内容。现在我们进入到我们的博客所在的文件夹，执行 git init，接着执行 git remote add origin &lt;你的github用户名.github.io&gt;   ，然后把_config.yml里面的theme值修改为matery，接着重启我们的项目，这样你就能看到一个新主题的博客的，对于一些主题的配置，可以参考上述第一个主题的链接地址里面的文档。</p>\n<h3 id=\"写博客\"><a href=\"#写博客\" class=\"headerlink\" title=\"写博客\"></a>写博客</h3><p>现在我们来开始写我们自己的文章了。首先执行 hexo new &lt;文章名&gt;，这样你在source/_posts下面就能看到新建的文件了，然后你就可以在这个文件里面写你的文章啦，这个目录也是你所有博客所在的目录。</p>\n<h3 id=\"上传到服务器\"><a href=\"#上传到服务器\" class=\"headerlink\" title=\"上传到服务器\"></a>上传到服务器</h3><p>现在我们把我们的博客上传到服务器，可以让所有人都能浏览。我们执行以下步骤：</p>\n<ol>\n<li><p> npm install hexo-deployer-git -S</p>\n</li>\n<li><p>在 _config.yml 最后面修改成如下配置：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git\n  <span class=\"token key atrule\">repo</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/&lt;你的github用户名<span class=\"token punctuation\">&gt;</span>/&lt;你的github用户名.github.io<span class=\"token punctuation\">&gt;</span>\n  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>hexo deploy</p>\n</li>\n</ol>\n<p>现在访问&lt;你的github用户名&gt;.github.io，应该就能看到你的博客内容了。</p>\n<p>截止到目前，你的博客已经搭建完成了，但是有几个问题：</p>\n<ol>\n<li>我们要在多个电脑之间写博客怎么办？</li>\n<li>每次都要执行部署命令，能不能自动部署？</li>\n<li>如果我想写一个小程序博客，难道每次写完我还得再复制一份吗？有没有什么办法能把我们的文章自动同步过去？</li>\n</ol>\n<p>对于想要搭建自己博客的非技术人员，到这里就已经足够了，但是如果你还想让你博客更智能，更方便一些的话，可以继续往下看。</p>\n<p>我们来逐一解决这些问题：</p>\n<p>首先我们可以另建一个source分支来保存我们的源码以便在多个电脑之间同步，然后当我们提交我们的代码的时候就会执行自动部署。</p>\n<ol>\n<li><p>访问  <a href=\"https://github.com/marketplace/travis-ci\">Travis CI</a> ，进行授权<br><img src=\"/images/blog/hexo/screenshot2.jpg\"></p>\n<p><img src=\"/images/blog/hexo/screenshot3.jpg\"></p>\n</li>\n<li><p>你应该会被重定向到 Travis CI 的页面 ，然后从中找到对应的仓库地址，打开开关</p>\n<p><img src=\"/images/blog/hexo/screenshot4.jpg\"></p>\n</li>\n</ol>\n<ol start=\"3\">\n<li><p>在浏览器新建一个标签页，前往 GitHub <a href=\"https://github.com/settings/tokens\">新建Personal Access Token</a> ，只勾选 repo 的权限并生成一个新的 Token。Token 生成后请复制并保存好。</p>\n</li>\n<li><p>回到 Travis CI，前往你的 repository 的设置页面，在 Environment Variables 下新建一个环境变量，Name 为 GH_TOKEN，Value 为刚才你在 GitHub 生成的 Token。确保 DISPLAY VALUE IN BUILD LOG 保持 不被勾选 避免你的 Token 泄漏。点击 Add 保存。</p>\n<p><img src=\"/images/blog/hexo/screenshot5.jpg\"></p>\n<p><img src=\"/images/blog/hexo/screenshot6.jpg\"></p>\n</li>\n<li><p>在你的 Hexo 站点文件夹中新建一个 .travis.yml 文件，内容如下：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">os</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> linux\n<span class=\"token key atrule\">language</span><span class=\"token punctuation\">:</span> node_js\n<span class=\"token key atrule\">node_js</span><span class=\"token punctuation\">:</span> stable\n<span class=\"token key atrule\">cache</span><span class=\"token punctuation\">:</span> npm\n<span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">only</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> source <span class=\"token comment\"># build source branch only</span>\n<span class=\"token key atrule\">before_install</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> npm install <span class=\"token punctuation\">-</span>g hexo<span class=\"token punctuation\">-</span>cli\n<span class=\"token key atrule\">install</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> npm install\n<span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> hexo generate <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>force <span class=\"token comment\"># generate static files</span>\n<span class=\"token key atrule\">after_success</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> git config <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>local user.name \"你的github用户名\"\n  <span class=\"token punctuation\">-</span> git config <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>local user.email \"你的github邮箱\"\n  <span class=\"token punctuation\">-</span> sed <span class=\"token punctuation\">-</span>i \"s~git@github.com<span class=\"token punctuation\">:</span>~https<span class=\"token punctuation\">:</span>//$<span class=\"token punctuation\">{</span>GH_TOKEN<span class=\"token punctuation\">}</span>@github.com/~\" _config.yml\n  <span class=\"token punctuation\">-</span> hexo deploy <span class=\"token punctuation\">&gt;</span> /dev/null<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>将你的本地仓库推送到github仓库里面，Travis CI就会自动自行构建，并将生成的文件推送到你仓库的master分支上吗</p>\n</li>\n<li><p>访问  https://&lt;你的 GitHub 用户名&gt;.github.io ，你应该就能看到你的博客了。</p>\n</li>\n</ol>\n<h3 id=\"同步到小程序\"><a href=\"#同步到小程序\" class=\"headerlink\" title=\"同步到小程序\"></a>同步到小程序</h3><p>最后我们来聊一下如何将你的写的博客文章同步到微信小程序里面。</p>\n<p>这里我们要用到 hexo-generator-restful 这个插件，首先我们按照这个插件 npm install hexo-generator-restful –save，然后在 _config.ym 里面增加如下配置，根据自己情况调整</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">restful</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># site 可配置为数组选择性生成某些属性</span>\n  <span class=\"token comment\"># site: ['title', 'subtitle', 'description', 'author', 'since', email', 'favicon', 'avatar']</span>\n  <span class=\"token key atrule\">site</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>        <span class=\"token comment\"># hexo.config mix theme.config</span>\n  <span class=\"token key atrule\">posts_size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>    <span class=\"token comment\"># 文章列表分页，0 表示不分页</span>\n  <span class=\"token key atrule\">posts_props</span><span class=\"token punctuation\">:</span>      <span class=\"token comment\"># 文章列表项的需要生成的属性</span>\n    <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">slug</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">updated</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">comments</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">excerpt</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n    <span class=\"token key atrule\">cover</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>      <span class=\"token comment\"># 封面图，取文章第一张图片</span>\n    <span class=\"token key atrule\">content</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n    <span class=\"token key atrule\">keywords</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n    <span class=\"token key atrule\">categories</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">categories</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>         <span class=\"token comment\"># 分类数据</span>\n  <span class=\"token key atrule\">use_category_slug</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># Use slug for filename of category data</span>\n  <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>               <span class=\"token comment\"># 标签数据</span>\n  <span class=\"token key atrule\">use_tag_slug</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>      <span class=\"token comment\"># Use slug for filename of tag data</span>\n  <span class=\"token key atrule\">post</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>               <span class=\"token comment\"># 文章数据</span>\n  <span class=\"token key atrule\">pages</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>             <span class=\"token comment\"># 额外的 Hexo 页面数据, 如 About</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<p>最后会生成一个api的文件夹，里面包含了博客数据，小程序可从这里获取数据。</p>\n<h3 id=\"网站\"><a href=\"#网站\" class=\"headerlink\" title=\"网站\"></a>网站</h3><p><a href=\"https://tuhongwei.github.io/\">https://tuhongwei.github.io</a></p>\n<h3 id=\"小程序\"><a href=\"#小程序\" class=\"headerlink\" title=\"小程序\"></a>小程序</h3><p><img src=\"/images/blog/hexo/miniprogram.jpg\" alt=\"前端天地\"></p>\n","more":"<h3 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h3><p>本文也适合有搭建博客需求的非技术人员，不需要服务器，不需要域名，手把手教你搭建一个自己的博客。</p>\n<h3 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h3><p>首先安装一个 Node.js 和 git，安装方式同普通软件安装一样，这里就不详述了。然后打开你的终端，输入命令npm install -g hexo-cli 安装hexo，继续输入 hexo init myBlog，初始化一个你的博客项目。至此，你的博客所在文件夹里面就有了如下目录<img src=\"/images/blog/hexo/screenshot1.jpg\"></p>\n<p>然后用 npm run server启动你的本地服务器，然后在你浏览器里面打开<a href=\"http://localhost:4000，不出意外的话就能看到了你的博客的界面了。\">http://localhost:4000，不出意外的话就能看到了你的博客的界面了。</a></p>\n<h3 id=\"润色\"><a href=\"#润色\" class=\"headerlink\" title=\"润色\"></a>润色</h3><p>现在你的博客里面使用的是hexo内置的默认主题，觉得有点丑是吧，那我们换个主题，这里我推荐自己感觉比较好的两个主题：<a href=\"https://github.com/blinkfox/hexo-theme-matery\">https://github.com/blinkfox/hexo-theme-matery</a> 和 <a href=\"https://github.com/niemingzhao/niemingzhao.github.io%E3%80%82\">https://github.com/niemingzhao/niemingzhao.github.io。</a> 好了，我们现在把它安装到我们的本地，执行 git clone <code> https://github.com/blinkfox/hexo-theme-matery.git</code>   themes/matery , 然后去matery文件夹下删掉.git文件夹。</p>\n<p>我们去我们的github里面创建一个仓库，名字叫做 <strong>你的github用户名.github.io</strong>  ，比如我的用户名是tuhongwei，那么创建的仓库名就是tuhongwei.github.io，至于为什么这样命名，是因为github提供了一个这种形式的域名，可以直接访问到我们仓库里的静态内容。现在我们进入到我们的博客所在的文件夹，执行 git init，接着执行 git remote add origin &lt;你的github用户名.github.io&gt;   ，然后把_config.yml里面的theme值修改为matery，接着重启我们的项目，这样你就能看到一个新主题的博客的，对于一些主题的配置，可以参考上述第一个主题的链接地址里面的文档。</p>\n<h3 id=\"写博客\"><a href=\"#写博客\" class=\"headerlink\" title=\"写博客\"></a>写博客</h3><p>现在我们来开始写我们自己的文章了。首先执行 hexo new &lt;文章名&gt;，这样你在source/_posts下面就能看到新建的文件了，然后你就可以在这个文件里面写你的文章啦，这个目录也是你所有博客所在的目录。</p>\n<h3 id=\"上传到服务器\"><a href=\"#上传到服务器\" class=\"headerlink\" title=\"上传到服务器\"></a>上传到服务器</h3><p>现在我们把我们的博客上传到服务器，可以让所有人都能浏览。我们执行以下步骤：</p>\n<ol>\n<li><p> npm install hexo-deployer-git -S</p>\n</li>\n<li><p>在 _config.yml 最后面修改成如下配置：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git\n  <span class=\"token key atrule\">repo</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/&lt;你的github用户名<span class=\"token punctuation\">></span>/&lt;你的github用户名.github.io<span class=\"token punctuation\">></span>\n  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>hexo deploy</p>\n</li>\n</ol>\n<p>现在访问&lt;你的github用户名&gt;.github.io，应该就能看到你的博客内容了。</p>\n<p>截止到目前，你的博客已经搭建完成了，但是有几个问题：</p>\n<ol>\n<li>我们要在多个电脑之间写博客怎么办？</li>\n<li>每次都要执行部署命令，能不能自动部署？</li>\n<li>如果我想写一个小程序博客，难道每次写完我还得再复制一份吗？有没有什么办法能把我们的文章自动同步过去？</li>\n</ol>\n<p>对于想要搭建自己博客的非技术人员，到这里就已经足够了，但是如果你还想让你博客更智能，更方便一些的话，可以继续往下看。</p>\n<p>我们来逐一解决这些问题：</p>\n<p>首先我们可以另建一个source分支来保存我们的源码以便在多个电脑之间同步，然后当我们提交我们的代码的时候就会执行自动部署。</p>\n<ol>\n<li><p>访问  <a href=\"https://github.com/marketplace/travis-ci\">Travis CI</a> ，进行授权<br><img src=\"/images/blog/hexo/screenshot2.jpg\"></p>\n<p><img src=\"/images/blog/hexo/screenshot3.jpg\"></p>\n</li>\n<li><p>你应该会被重定向到 Travis CI 的页面 ，然后从中找到对应的仓库地址，打开开关</p>\n<p><img src=\"/images/blog/hexo/screenshot4.jpg\"></p>\n</li>\n</ol>\n<ol start=\"3\">\n<li><p>在浏览器新建一个标签页，前往 GitHub <a href=\"https://github.com/settings/tokens\">新建Personal Access Token</a> ，只勾选 repo 的权限并生成一个新的 Token。Token 生成后请复制并保存好。</p>\n</li>\n<li><p>回到 Travis CI，前往你的 repository 的设置页面，在 Environment Variables 下新建一个环境变量，Name 为 GH_TOKEN，Value 为刚才你在 GitHub 生成的 Token。确保 DISPLAY VALUE IN BUILD LOG 保持 不被勾选 避免你的 Token 泄漏。点击 Add 保存。</p>\n<p><img src=\"/images/blog/hexo/screenshot5.jpg\"></p>\n<p><img src=\"/images/blog/hexo/screenshot6.jpg\"></p>\n</li>\n<li><p>在你的 Hexo 站点文件夹中新建一个 .travis.yml 文件，内容如下：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">os</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> linux\n<span class=\"token key atrule\">language</span><span class=\"token punctuation\">:</span> node_js\n<span class=\"token key atrule\">node_js</span><span class=\"token punctuation\">:</span> stable\n<span class=\"token key atrule\">cache</span><span class=\"token punctuation\">:</span> npm\n<span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">only</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> source <span class=\"token comment\"># build source branch only</span>\n<span class=\"token key atrule\">before_install</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> npm install <span class=\"token punctuation\">-</span>g hexo<span class=\"token punctuation\">-</span>cli\n<span class=\"token key atrule\">install</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> npm install\n<span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> hexo generate <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>force <span class=\"token comment\"># generate static files</span>\n<span class=\"token key atrule\">after_success</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> git config <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>local user.name \"你的github用户名\"\n  <span class=\"token punctuation\">-</span> git config <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>local user.email \"你的github邮箱\"\n  <span class=\"token punctuation\">-</span> sed <span class=\"token punctuation\">-</span>i \"s~git@github.com<span class=\"token punctuation\">:</span>~https<span class=\"token punctuation\">:</span>//$<span class=\"token punctuation\">&#123;</span>GH_TOKEN<span class=\"token punctuation\">&#125;</span>@github.com/~\" _config.yml\n  <span class=\"token punctuation\">-</span> hexo deploy <span class=\"token punctuation\">></span> /dev/null<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>将你的本地仓库推送到github仓库里面，Travis CI就会自动自行构建，并将生成的文件推送到你仓库的master分支上吗</p>\n</li>\n<li><p>访问  https://&lt;你的 GitHub 用户名&gt;.github.io ，你应该就能看到你的博客了。</p>\n</li>\n</ol>\n<h3 id=\"同步到小程序\"><a href=\"#同步到小程序\" class=\"headerlink\" title=\"同步到小程序\"></a>同步到小程序</h3><p>最后我们来聊一下如何将你的写的博客文章同步到微信小程序里面。</p>\n<p>这里我们要用到 hexo-generator-restful 这个插件，首先我们按照这个插件 npm install hexo-generator-restful –save，然后在 _config.ym 里面增加如下配置，根据自己情况调整</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">restful</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># site 可配置为数组选择性生成某些属性</span>\n  <span class=\"token comment\"># site: ['title', 'subtitle', 'description', 'author', 'since', email', 'favicon', 'avatar']</span>\n  <span class=\"token key atrule\">site</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>        <span class=\"token comment\"># hexo.config mix theme.config</span>\n  <span class=\"token key atrule\">posts_size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>    <span class=\"token comment\"># 文章列表分页，0 表示不分页</span>\n  <span class=\"token key atrule\">posts_props</span><span class=\"token punctuation\">:</span>      <span class=\"token comment\"># 文章列表项的需要生成的属性</span>\n    <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">slug</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">updated</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">comments</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">excerpt</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n    <span class=\"token key atrule\">cover</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>      <span class=\"token comment\"># 封面图，取文章第一张图片</span>\n    <span class=\"token key atrule\">content</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n    <span class=\"token key atrule\">keywords</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n    <span class=\"token key atrule\">categories</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">categories</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>         <span class=\"token comment\"># 分类数据</span>\n  <span class=\"token key atrule\">use_category_slug</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># Use slug for filename of category data</span>\n  <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>               <span class=\"token comment\"># 标签数据</span>\n  <span class=\"token key atrule\">use_tag_slug</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>      <span class=\"token comment\"># Use slug for filename of tag data</span>\n  <span class=\"token key atrule\">post</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>               <span class=\"token comment\"># 文章数据</span>\n  <span class=\"token key atrule\">pages</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>             <span class=\"token comment\"># 额外的 Hexo 页面数据, 如 About</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<p>最后会生成一个api的文件夹，里面包含了博客数据，小程序可从这里获取数据。</p>\n<h3 id=\"网站\"><a href=\"#网站\" class=\"headerlink\" title=\"网站\"></a>网站</h3><p><a href=\"https://tuhongwei.github.io/\">https://tuhongwei.github.io</a></p>\n<h3 id=\"小程序\"><a href=\"#小程序\" class=\"headerlink\" title=\"小程序\"></a>小程序</h3><p><img src=\"/images/blog/hexo/miniprogram.jpg\" alt=\"前端天地\"></p>\n","categories":[{"name":"教程","path":"api/categories/教程.json"}],"tags":[{"name":"Hexo","path":"api/tags/Hexo.json"},{"name":"博客","path":"api/tags/博客.json"}]}